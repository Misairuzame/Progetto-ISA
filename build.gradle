plugins {
    id 'java'
}

version '1.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.sparkjava:spark-core:2.9.1"
    implementation group: "org.slf4j", name: "slf4j-api", version: "1.7.+"
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.+'
    implementation 'org.apache.httpcomponents:httpclient:4.5.+'
    implementation group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1.1'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.14'
    implementation group: 'com.sparkjava', name: 'spark-template-thymeleaf', version: '2.7.1'
    implementation group: 'com.google.guava', name: 'guava-io', version: 'r03'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.0-M1'
    testImplementation group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.7.0-M1'
    testImplementation 'com.pholser:junit-quickcheck-core:0.9.2'
    implementation 'com.pholser:junit-quickcheck-generators:0.9.2'
    testImplementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '2.41.0'
    testImplementation 'org.mockito:mockito-all:1.10.19'
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'ProgettoISA',
                'Main-Class': 'com.gb.restApp.Main'
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

//Utilizzato per il debugging
task myCustomTest(type: Test) {
    useJUnitPlatform()
}

//Il task 'test' fa solo gli unit test
test {
    useJUnitPlatform() {
        include '**/unit/*Test.class'
        exclude '**/integration/*'
    }
}

//Il task 'integrationTest' fa prima gli
//unit test, poi gli integration test
task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    useJUnitPlatform() {
        include '**/integration/*Test.class'
        exclude '**/unit/*'
    }
    dependsOn test
    shouldRunAfter test
}
check.dependsOn integrationTest

javadoc.setDestinationDir(new File(System.getProperty("user.dir")+"\\docs"))
